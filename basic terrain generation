using UnityEngine;
using System.Collections;


/**
   This code generates ground sections infinitely:
     - The initial value of y must be set to the length of the chunk in Unity units, the same should be done to the + value following x on line 39
     - All ground (and ceiling) objects must be tagged "Ground" in order to avoid an error
     - It may be neccesary to edit the right edge of the ground object to avoid rigidbody collisions between ground objects
     - All ground objects must have a rigidbody applied
     - Note the time between batch spawns can effect how the change ground timer works

        THIS CODE CURRENTLY WRITTEN FOR UNITY2D


    **/
public class gameHandling : MonoBehaviour
{
    GameObject ground;  // GameObject that stores the ground prefab
    GameObject groundSec; // Stores the most recently spawned section of ground, neccessary to manipulate each section
    float grTime = 6.1F;  // Timer that counts to when a new batch of ground sections should be spawned (every 6 seconds)
    float runTime = 0.0F; //Stores current session timer
    int x = 0;
    int i = 0;
    int z = 0;
    int u = 0;
    int currentGroundSecID;
    public int groundChangeTimer;
    float y = 24F;
    public int groundTypeSwitchTime;
    public int groundID1;
    public int groundID2;
    public int groundID3;
    //public float moveSpeed = 3;
    public int[,] groundChangeTime1 = new int[3,3];

    // Use this for initialization
    void Start()
    {
        string test = "Prefabs/groundSections/" + currentGroundSecID;
        Debug.Log(test);

        ground = (GameObject)Resources.Load("Prefabs/0", typeof(GameObject)) as GameObject;
        Debug.Log(ground);
        currentGroundSecID = z;
        groundChangeTime1[0, 1] = groundID1;
        groundChangeTime1[1, 1] = groundID2;
        groundChangeTime1[2, 1] = groundID3;
    }
    // Update is called once per frame
    void Update()
    {
        ground = SetGroundSection();
        runTime = runTime + Time.deltaTime;
        if(grTime > 6.0) 
        {
            while(i < 3)  // Spawns 3 sections
            {
                //The position that each section is spawned at depends on the last instances' spawn position.
                if (groundSec != null) //When first run, groundSec will be null, if so this sets it to the default starting pos                      
                {
                    y = groundSec.transform.position.x+25;
                }     
                groundSec = (GameObject)Instantiate(ground, new Vector3(y, -3, 0), Quaternion.Euler(0,0,0));  //groundSec is an instance of ground gameobject 
                groundSec.GetComponent<Rigidbody2D>().velocity = -3 * transform.localScale.x * groundSec.transform.right; //Applies velocity to each ground section
                i++;
            }
            grTime = 0.0F; //Resets timer to 0
            i = 0;
        }
        grTime = grTime + Time.deltaTime; //increments timer 

    }

   GameObject SetGroundSection()
    {
        runTime = runTime + Time.deltaTime;
        Debug.Log(runTime);

        if (runTime > groundChangeTimer)
        {
            z++;
            if (z == 3)
            {
                z = 0;
            }

            currentGroundSecID = groundChangeTime1[z, 1];
            //groundChangeTimer = groundChangeTime1[z, 1, 1];
            ground = (GameObject)Resources.Load("Prefabs/" + currentGroundSecID, typeof(GameObject)) as GameObject;
            Debug.Log(ground);
            runTime = 0;
        }
        else
        {
            ground = ground = (GameObject)Resources.Load("Prefabs/" + currentGroundSecID, typeof(GameObject)) as GameObject; ;
        }



        return ground;
    }

    
}
